#+glossary_sources: ~/org/glossary.org
** Les contraintes de la construction
*** Taxonomie des contraintes
Nature technique :
- Géométriques : espacements, tolérances…
  Comment les décrire? eg. mode de pose des câbles, espacement d’une prise d’un point d’eau…
  Quel parallèle entre contrainte géométrique et la langue naturelle + éventuellement jargon métier
- Physiques : Énergie, signal, interférences, échauffements, sections, charges, vibrations, environnement (corrosion) : Électrique, Fluidique…
- Chimiques : Couple galvanique

Nature fonctionnelle :
- Environnementales : Net 0, Emprunte carbone, biodiversité… ici se référer aux objectifs de transition écologique uniformisée par l’UE, explorer les critères “DNSH”
- Sécuritaires : Cybersécurité, sécurité physique des personnes, Stockage produits dangereux, protection individuelle
- Logiques : Behavior-Driven Design, Domain-Driven Design, Test-Driven Development...

#+BEGIN_QUOTE
Il peut aussi exister des contraintes liées au coût, à la disponibilité des composants ou des ressources de l’entité, ou des calendriers fixes susceptibles de nécessiter un compromis entre la fonctionnalité et la sûreté de fonctionnement. -- NF EN 60300-1:2014[cite:@GestionSureteFonctionnement2014]
#+END_QUOTE

Nature organisationnelle :
- Protocolaires : Procédures de validation, processus de gestion de projet
- Politique : Urbanisme...
- Sociétales :  Habilitations, formations...
- Financières : Limite budgétaire
- Sociales : 
- Légales : Propriété intellectuelle, 
- Temporelles : Hiérarchisation et dépendance des actions
- Contractuelles : 

  
Justifier le besoin d'une "méthode de rédaction générique".

*** Médiums et volumétrie
Sources, origines et finalités

# Définition
Brevets, Normes, Législation, Contrats, Jurisprudences...

Volume conséquent => faire un compte du nombre de pages par domaine pour illustrer la problématique.

#+CAPTION: Proposition de représentation des environnements de contraintes
#+NAME: fig:360-view-engineering-environment
#+ATTR_LATEX: :placement [htbp]
[[./svg/360-view-engineering-environment.pdf]]

*** Exercice des contraintes
Dans l'industrie de la construction, les parties prenantes se coordonnent dans la réponse à des exigences exprimées. Cette gestion des éxigences vise l'atteinte des objectifs du client en respect des contraintes légales, réglementaires et normatives.

#+BEGIN_QUOTE
Les exigences sont déterminées à partir des besoins des parties prenantes et des contraintes comme les conditions d’utilisation, les ressources et la législation. -- NF EN 60300-1:2014[cite:@GestionSureteFonctionnement2014]
#+END_QUOTE

La relation entre éxigences et contraintes est représentée par la [[fig:relation-contraintes-exigences]]. Ainsi, une exigence est une spécification d'un besoin tenant compte des contraintes du domaine d'étude. Cependant, la limite est souvent floue entre un besoin, une contrainte et une exigence. Les professionnels de la construction ont donc tendance à les mélanger.

#+CAPTION: La relation entre contraintes et exigences selont l'ISO 60300-1[cite:@GestionSureteFonctionnement2014]
#+NAME: fig:relation-contraintes-exigences
#+ATTR_LATEX: :placement [htbp]
[[./svg/relation-contraintes-exigences.pdf]]

Une matrice de traçabilité des exigences est employé pour réalisé le suivi des exigences.

Elle se matérialise par un tableau ou un document qui relie les exigences d'un projet aux livrables, tâches, jalons ou tests qui les satisfont. Son objectif principal est de garantir que toutes les exigences sont couvertes par les plans du projet et qu'aucun besoin n'est négligé. Elle permet également de vérifier l'impact des modifications d'exigences, facilitant la gestion des changements.

Élaboration de la matrice :
1. Collecte des exigences : rassembler toutes les exigences du projet, qu'elles proviennent du cahier des charges, des réunions avec les parties prenantes, d'autres documents de projet ainsi que des textes institutionnels applicables.
2. Identification des livrables : Listez tous les livrables du projet, y compris les rapports, les documents, le code source, les schémas, les maquettes numériques, les plans, etc.
3. Préparer la matrice : la première colonne source les exigences et la première ligne source les livrables. La première cellule (eg. A1:A1) est laissée vide. 
4. Affecter les livrables aux exigences : Une croix est inscrite à l'intersection de chaque exigence devant être respectée ou vérifiée par un livrable. Un livrable peut être affecté à plusieurs exigences et une exigence peut nécessiter plusieurs livrables pour être vérifié. Cette étape nécessite une compréhension approfondie du projet et une collaboration étroite avec les équipes techniques.

Utilisation de la matrice :
- Vérification de la couverture des exigences : la matrice permet de s'assurer que chaque exigence est adressée par au moins un livrable, réduisant ainsi le risque d'omissions.
- Gestion des changements : Lorsque des modifications sont apportées à une exigence, la matrice facilite l'identification des livrables impactés, aidant à évaluer l'ampleur et l'impact du changement sur le projet.
- Communication avec les parties prenantes : La matrice fournit une vue d'ensemble claire qui peut être utilisée pour communiquer l'avancement du projet et la manière dont les exigences sont satisfaites, renforçant la confiance des parties prenantes.
- Facilitation des tests : En liant les exigences aux cas de test, la matrice aide à s'assurer que tous les aspects du système sont correctement testés, contribuant à la qualité du produit final.

La matrice de traçabilité des exigences est un document vivant qui *doit être régulièrement mis à jour tout au long du projet*. Les ajouts, les suppressions ou les modifications d'exigences, ainsi que l'évolution des plans de livrables, doivent être reflétés dans la matrice pour maintenir sa précision et sa pertinence.
Elle est employée en complément d'une liste des documents exécutés par le prestataire.

La nature de sa composition s'apparente à une table de jonction d'une base de donnée relationnelle tel que pourrait définir, sous forme de MLD la figure [[fig:db-exigences-lde]].

#+CAPTION: MLD - Association des éxigences aux livrables
#+NAME: fig:db-exigences-lde
#+ATTR_LATEX: :placement [htbp]
[[./svg/db-exigences-lde.pdf]]

Pour la suite de l'étude, le mot "contrainte" regroupera l'ensemble des éléments impactant la poursuite d'un projet. Il regroupera donc également la notion d'égigence et la notion de besoin.


Démontrer l'hétérogénéité et le chaos actuels, et conclure sur l'inefficacité des approches qui tentent de "traduire" ce chaos au lieu de le "discipliner" à la source.
La question "vers un DSL de la construction ?" (1.5.2) est la conclusion naturelle de cette analyse.

** Génie électrique et systèmes contraints
*** Spécificités du génie électrique
Expression sous forme de diagramme SIPOC de la chaine de valeur en électrotechnique ?

*** Contraintes en conception électrique
*** Optimisation multicritères

** Vérification et validation en ingénierie
*** Concepts fondamentaux
*Vérification* : "Construisons-nous le produit correctement ?" - Conformité aux spécifications

*Validation* : "Construisons-nous le bon produit ?" - Adéquation aux besoins utilisateur

*** Méthodes de traitement
Langage naturel :
- Rédaction
- Affectation (par des tableaux et matrices)
- Relecture (sur la base de listes à puces, checklist)
- Simulations (éventuellement mais loop sur rapport produit)
- Model checking : vérification exhaustive d'états finis, non systématique à date et loop sur rapport produit

*** Défis en génie électrique


** Apports du génie logiciel
*** Programmation déclarative et logique
Langage formels déclaratif textuel : Prolog, Claire, Raku, OCL, COBOL

? : OCL

Paradigme de programmation par les contraintes : Prolog, Claire, Raku

Paradigme de programmation en langage proche du naturel : COBOL, SQL

*** Programmation piloté par le comportement
Fondements du BDD :
- Une évolution du TDD avec des inspirations du DDD.

Synthaxe

#+CAPTION: Exemple de scénario Gherkin
#+NAME: fig:gherkin-login
#+ATTR_LATEX: :placement [htbp]
#+begin_src gherkin :results verbatim
  Fonctionnalité: Connexion utilisateur
    Exemple: Connexion avec email inconnu
      Etant donné que l'utilisateur est sur la page de connexion
      Lorsqu' il saisit un email
      Mais que cet email n'est pas connu par le SSO
      Alors il ne peut pas renseigner son mot de passe
    Exemple: Connexion avec un mot de passe non valide
      Etant donné que l'utilisateur est sur la page de connexion
      Lorsqu' il saisit un email valide
      Et qu'il saisit un mot de passe non valide
      Alors il ne peut pas se connecter
#+end_src

*** Méthodes de descritpions et ontologies
Ontologie BRICS

Aproche d'ensemble puis subset par spécificité (activité ou domaine)

*** Business rule engine
Langages formels déclaratif visuels : 
- BPM et BPMN
- Activity diagrams
- Programmation visuelle (No-Code, Workflows...)
- UML, SysML, UAFML… 

*** Visualisations et interactions

** Analyse critique et positionnement
*** Lacunes identifiées
Très hétéroclite, besoin d’abstraction pour généraliser les approches.

La définition de l'environnement d'étude en particulier duquel le périmètre de texte institutionnel applicable n'est pas aisé à réalisé.
Il manque en ce sens un mécanisme de sélection de l'environnement permettant de soucer automatiquement les contraintes appropriées.

Exemple 1 : Travaux dans une base opérationnelle
- imposition du respect de l'Arrêté Qualité de 1984 (AQ84)
- import des contraintes de l'AQ84 dans la base des contraintes du projet.


Exemple 2 : Travaux de distribution d'énergie électrique
- imposition du respect de la norme obligatoire NF C15-100
- import des contraintes de la NF C15-100 dans la base des contraintes du projet.


Exemple 3 : Travaux d'installation d'équipement dans une zone sismique 3
- imposition d'une résistance sismique particulière des équipements
- import des contraintes de l'EUROCODE 3 dans la base des contraintes du projet.

*** Opportunités de recherche
Recherches potentiellements associées : gestion du contexte, quality information framework

vers un DSL de la construction ?

** Conclusion
